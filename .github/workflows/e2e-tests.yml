name: End-to-End Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run E2E tests daily at 3 AM UTC
    - cron: '0 3 * * *'

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7
        env:
          MONGO_INITDB_DATABASE: sos_cidadao_e2e
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      lavinmq:
        image: lavinmq/lavinmq:latest
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "curl -f http://localhost:15672/api/overview || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: 'api/requirements.txt'
        
    - name: Install backend dependencies
      run: |
        cd api
        pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Install Playwright
      run: |
        cd frontend
        npx playwright install --with-deps
        
    - name: Wait for services
      run: |
        timeout 60 bash -c 'until mongosh --eval "db.runCommand({ping: 1})" > /dev/null 2>&1; do sleep 2; done'
        timeout 60 bash -c 'until redis-cli ping > /dev/null 2>&1; do sleep 2; done'
        timeout 120 bash -c 'until curl -f http://localhost:15672/api/overview > /dev/null 2>&1; do sleep 5; done'
        
    - name: Setup test data
      run: |
        cd api
        python scripts/setup_e2e_data.py
      env:
        ENVIRONMENT: e2e
        MONGODB_URI: mongodb://localhost:27017/sos_cidadao_e2e
        REDIS_URL: redis://localhost:6379
        AMQP_URL: amqp://guest:guest@localhost:5672/
        JWT_SECRET: e2e-test-secret-key
        OTEL_ENABLED: false
        DOCS_ENABLED: true
        
    - name: Start backend server
      run: |
        cd api
        python app.py &
        echo $! > backend.pid
        sleep 10
      env:
        ENVIRONMENT: e2e
        MONGODB_URI: mongodb://localhost:27017/sos_cidadao_e2e
        REDIS_URL: redis://localhost:6379
        AMQP_URL: amqp://guest:guest@localhost:5672/
        JWT_SECRET: e2e-test-secret-key
        OTEL_ENABLED: false
        DOCS_ENABLED: true
        FLASK_ENV: development
        FLASK_DEBUG: false
        
    - name: Build and start frontend
      run: |
        cd frontend
        npm run build
        npm run preview -- --port 3000 --host &
        echo $! > frontend.pid
        sleep 10
        
    - name: Wait for servers
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:5000/api/healthz > /dev/null 2>&1; do sleep 2; done'
        timeout 60 bash -c 'until curl -f http://localhost:3000 > /dev/null 2>&1; do sleep 2; done'
        
    - name: Run E2E tests
      run: |
        cd frontend
        npx playwright test --reporter=html --reporter=junit
      env:
        PLAYWRIGHT_BASE_URL: http://localhost:3000
        API_BASE_URL: http://localhost:5000
        
    - name: Stop servers
      if: always()
      run: |
        if [ -f api/backend.pid ]; then
          kill $(cat api/backend.pid) || true
        fi
        if [ -f frontend/frontend.pid ]; then
          kill $(cat frontend/frontend.pid) || true
        fi
        
    - name: Upload E2E test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e-test-results
        path: |
          frontend/playwright-report/
          frontend/test-results/
        retention-days: 30
        
    - name: Upload E2E screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: e2e-screenshots
        path: frontend/test-results/
        retention-days: 7